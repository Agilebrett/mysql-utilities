Test case 1 - check a table without indexes
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
# Getting indexes for util_test_c.t6
# Table util_test_c.t6 is not indexed.
#
# ...done.
Test case 2 - check a list of tables and databases
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
# Getting indexes for util_test_a.t1
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX `s4` ON `util_test_a`.`t1` (`d`(32)) 
#     may be redundant or duplicate of:
CREATE INDEX `s2` ON `util_test_a`.`t1` (`d`(32)) 
#
CREATE INDEX `s2` ON `util_test_a`.`t1` (`d`(32)) 
#     may be redundant or duplicate of:
CREATE INDEX `s4` ON `util_test_a`.`t1` (`d`(32)) 
#
# Getting indexes for util_test_c.t5
#   Table %s does not contain a PRIMARY key.
# The following indexes are duplicates or redundant for table util_test_c.t5:
#
CREATE FULLTEXT INDEX `ft1` ON `util_test_c`.`t5` (`y`) 
#     may be redundant or duplicate of:
CREATE FULLTEXT INDEX `ft` ON `util_test_c`.`t5` (`y`) 
#
CREATE FULLTEXT INDEX `ft6` ON `util_test_c`.`t5` (`a`, `b`, `c`) 
#     may be redundant or duplicate of:
CREATE FULLTEXT INDEX `ft2` ON `util_test_c`.`t5` (`a`, `b`, `c`) 
#
CREATE FULLTEXT INDEX `ft5` ON `util_test_c`.`t5` (`a`, `b`, `y`) 
#     may be redundant or duplicate of:
CREATE FULLTEXT INDEX `ft4` ON `util_test_c`.`t5` (`a`, `b`, `y`) 
#
# Getting indexes for util_test_c.t6
# Table util_test_c.t6 is not indexed.
#
# Getting indexes for util_test_b.t3
#   Table %s does not contain a PRIMARY key.
# Table util_test_b.t3 has no duplicate nor redundant indexes.
#
# Getting indexes for util_test_b.t4
#   Table %s does not contain a PRIMARY key.
# Table util_test_b.t4 has no duplicate nor redundant indexes.
#
# ...done.
Test case 3 - check all tables for a single database
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
# Getting indexes for util_test_a.t1
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX `s4` ON `util_test_a`.`t1` (`d`(32)) 
#     may be redundant or duplicate of:
CREATE INDEX `s2` ON `util_test_a`.`t1` (`d`(32)) 
#
CREATE INDEX `s2` ON `util_test_a`.`t1` (`d`(32)) 
#     may be redundant or duplicate of:
CREATE INDEX `s4` ON `util_test_a`.`t1` (`d`(32)) 
#
# Getting indexes for util_test_a.t2
#   Table %s does not contain a PRIMARY key.
# Table util_test_a.t2 has no duplicate nor redundant indexes.
#
# ...done.
Test case 4 - check tables for a non-existant database
# Source on XXXX-XXXX: ... connected.
# Warning: database util_test_X does not exist. Skipping.
ERROR: No tables to check.
Test case 5 - check indexes for a non-existant table
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
ERROR: Table nosuch.nosuch does not exist. Use --skip to skip missing tables.
Test case 6 - check indexes for a non-existant table with skip option
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
#
# ...done.
Test case 7 - check clustered indexes redundancies
# Source on XXXX-XXXX: ... connected.
# Checking indexes...
# Getting indexes for util_test_d.cluster_idx
# The following index is a duplicate or redundant for table util_test_d.cluster_idx:
#
CREATE INDEX `col2` ON `util_test_d`.`cluster_idx` (`col2`) USING BTREE
#     may be redundant or duplicate of:
CREATE INDEX `redundant` ON `util_test_d`.`cluster_idx` (`col2`, `id`) USING BTREE
# The following index for table util_test_d.cluster_idx contains the clustered index and might be redundant:
#
CREATE INDEX `redundant` ON `util_test_d`.`cluster_idx` (`col2`, `id`) USING BTREE
#
# Getting indexes for util_test_d.no_cluster_idx
# The following index is a duplicate or redundant for table util_test_d.no_cluster_idx:
#
CREATE INDEX `col2` ON `util_test_d`.`no_cluster_idx` (`col2`) USING BTREE
#     may be redundant or duplicate of:
CREATE INDEX `redundant` ON `util_test_d`.`no_cluster_idx` (`col2`, `id`) USING BTREE
#
# Getting indexes for util_test_d.various_cluster_idx
# The following indexes are duplicates or redundant for table util_test_d.various_cluster_idx:
#
CREATE INDEX `col2_2` ON `util_test_d`.`various_cluster_idx` (`col2`) USING BTREE
#     may be redundant or duplicate of:
CREATE INDEX `col2` ON `util_test_d`.`various_cluster_idx` (`col2`) USING BTREE
#
CREATE INDEX `col2` ON `util_test_d`.`various_cluster_idx` (`col2`) USING BTREE
#     may be redundant or duplicate of:
CREATE INDEX `redundant` ON `util_test_d`.`various_cluster_idx` (`col2`, `id`) USING BTREE
# The following indexes for table util_test_d.various_cluster_idx contain the clustered index and might be redundant:
#
CREATE INDEX `redundant` ON `util_test_d`.`various_cluster_idx` (`col2`, `id`) USING BTREE
#
CREATE INDEX `another_redundant` ON `util_test_d`.`various_cluster_idx` (`col3`, `id`) USING BTREE
#
# ...done.
