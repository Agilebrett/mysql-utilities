Test case 1 - show health before switchover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT1
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT2
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT3
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       4. row *************************
      host: localhost
      port: PORT4
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
4 rows.
# ...done.
Test case 2 - switchover to slave1
# Checking privileges.
# Performing switchover from master at localhost:PORT1 to slave at localhost:PORT2.
# Checking candidate slave prerequisites.
# Checking slaves configuration to master.
# Waiting for slaves to catch up to old master.
# Stopping slaves.
# Performing STOP on all slaves.
# Demoting old master to be a slave to the new master.
# Switching slaves to new master.
# Starting all slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Switchover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT2  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT1  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 3 - show health after switchover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT2
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT1
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT3
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       4. row *************************
      host: localhost
      port: PORT4
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
4 rows.
# ...done.
Test case 4 - switchover to slave2
# Checking privileges.
# Performing switchover from master at localhost:PORT2 to slave at localhost:PORT3.
# Checking candidate slave prerequisites.
# Checking slaves configuration to master.
# Waiting for slaves to catch up to old master.
# Stopping slaves.
# Performing STOP on all slaves.
# Demoting old master to be a slave to the new master.
# Switching slaves to new master.
# Starting all slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Switchover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT3  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT1  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 5 - show health after switchover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT3
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT1
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT2
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       4. row *************************
      host: localhost
      port: PORT4
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
4 rows.
# ...done.
Test case 6 - switchover to slave3
# Checking privileges.
# Performing switchover from master at localhost:PORT3 to slave at localhost:PORT4.
# Checking candidate slave prerequisites.
# Checking slaves configuration to master.
# Waiting for slaves to catch up to old master.
# Stopping slaves.
# Performing STOP on all slaves.
# Demoting old master to be a slave to the new master.
# Switching slaves to new master.
# Starting all slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Switchover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT4  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT1  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 7 - show health after switchover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT4
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT1
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT2
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       4. row *************************
      host: localhost
      port: PORT3
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
4 rows.
# ...done.
Test case 8 - switchover to master
# Checking privileges.
# WARNING: You may be mixing host names and IP addresses. This may result in negative status reporting if your DNS services do not support reverse name lookup.
# Performing switchover from master at 127.0.0.1:PORT4 to slave at localhost:PORT1.
# Checking candidate slave prerequisites.
# Checking slaves configuration to master.
# Waiting for slaves to catch up to old master.
# Stopping slaves.
# Performing STOP on all slaves.
# Demoting old master to be a slave to the new master.
# Switching slaves to new master.
# Starting all slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Switchover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT1  | MASTER  | UP     | ON         | OK      |
| 127.0.0.1  | PORT3  | SLAVE   | UP     | ON         | OK      |
| 127.0.0.1  | PORT4  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 9 - show health after switchover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT1
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT2
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT3
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       4. row *************************
      host: localhost
      port: PORT4
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
4 rows.
# ...done.
Test case 10 - health with loopback
# Checking privileges.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT1  | MASTER  | UP     | ON         | OK      |
| 127.0.0.1  | PORT2  | SLAVE   | UP     | ON         | OK      |
| 127.0.0.1  | PORT3  | SLAVE   | UP     | ON         | OK      |
| 127.0.0.1  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 11 - health with discovery
# Discovering slaves for master at localhost:PORT1
# Discovering slave at localhost:PORT2
# Found slave: localhost:PORT2
# Discovering slave at localhost:PORT3
# Found slave: localhost:PORT3
# Discovering slave at localhost:PORT4
# Found slave: localhost:PORT4
# Checking privileges.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT1  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 12 - run command stop with --master
# Checking privileges.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 Ok
# ...done.
Test case 13 - run command start with --master
# Checking privileges.
# Performing START on all slaves.
#   Executing start on slave localhost:PORT2 Ok
#   Executing start on slave localhost:PORT3 Ok
#   Executing start on slave localhost:PORT4 Ok
# ...done.
Test case 13(b) - health after start
# Checking privileges.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT1  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 14 - run command stop with --master
# Checking privileges.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 Ok
# ...done.
Test case 15 - run command reset with --master
# Checking privileges.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT4 Ok
# Performing RESET on all slaves.
#   Executing reset on slave localhost:PORT2 Ok
#   Executing reset on slave localhost:PORT3 Ok
#   Executing reset on slave localhost:PORT4 Ok
# ...done.
Test case 16 - run command start without --master
# Checking privileges.
# Performing START on all slaves.
#   Executing start on slave localhost:PORT2 Ok
#   Executing start on slave localhost:PORT3 Ok
#   Executing start on slave localhost:PORT4 Ok
# ...done.
Test case 16(b) - health after start
# Checking privileges.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT1  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 17 - run command stop without --master
# Checking privileges.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 Ok
# ...done.
Test case 18 - run command reset without --master
# Checking privileges.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT2 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT2 Ok
#   Executing stop on slave localhost:PORT3 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 WARN - slave is not connected to master
#   Executing stop on slave localhost:PORT4 Ok
# Performing RESET on all slaves.
#   Executing reset on slave localhost:PORT2 Ok
#   Executing reset on slave localhost:PORT3 Ok
#   Executing reset on slave localhost:PORT4 Ok
# ...done.
Test case 19 - elect
# Checking privileges.
# Checking privileges on candidates.
# Electing candidate slave from candidate list then slaves list.
# Best slave found is located on localhost:PORT2.
# ...done.
Test case 20 - gtid
# Checking privileges.
#
# UUIDS for all servers:
host,port,role,uuid
#
# Transactions executed on the server:
host,port,role,gtid
# ...done.
Test case 21 - heatlh with discover
# Discovering slaves for master at localhost:PORT1
# Discovering slave at localhost:PORT2
# Found slave: localhost:PORT2
# Discovering slave at localhost:PORT3
# Found slave: localhost:PORT3
# Discovering slave at localhost:PORT4
# Found slave: localhost:PORT4
# Checking privileges.
#
# Replication Topology Health:
host,port,role,state,gtid_mode,health
localhost,PORT1,MASTER,UP,ON,OK
localhost,PORT2,SLAVE,UP,ON,OK
localhost,PORT3,SLAVE,UP,ON,OK
localhost,PORT4,SLAVE,UP,ON,OK
# ...done.
Test case 22 - failover to localhost:PORT4
# Checking privileges.
# Checking privileges on candidates.
# Performing failover.
# Candidate slave localhost:PORT4 will become the new master.
# Checking slaves status (before failover).
# Preparing candidate for failover.
# Creating replication user if it does not exist.
# Stopping slaves.
# Performing STOP on all slaves.
# Switching slaves to new master.
# Disconnecting new master as slave.
# Starting slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Failover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT4  | MASTER  | UP     | ON         | OK      |
| 127.0.0.1  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 23 - show health after failover
# Checking privileges.
#
# Replication Topology Health:
*************************       1. row *************************
      host: localhost
      port: PORT4
      role: MASTER
     state: UP
 gtid_mode: ON
    health: OK
*************************       2. row *************************
      host: localhost
      port: PORT2
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
*************************       3. row *************************
      host: localhost
      port: PORT3
      role: SLAVE
     state: UP
 gtid_mode: ON
    health: OK
3 rows.
# ...done.
Test case 24 - elect with missing rpl user
# Checking privileges.
# Checking privileges on candidates.
# Electing candidate slave from candidate list then slaves list.
# Checking eligibility of slave localhost:PORT2 for candidate.
#   Slave connected to master ... Ok
#   GTID_MODE=ON ... Ok
#   Logging filters agree ... Ok
#   Replication user exists ... Ok
# Best slave found is located on localhost:PORT2.
# ...done.
Test case 25 - mix FILE/TABLE and missing --rpl-user
# Discovering slaves for master at localhost:PORT1
# Discovering slave at localhost:PORT2
# Found slave: localhost:PORT2
# Discovering slave at localhost:PORT3
# Found slave: localhost:PORT3
# Discovering slave at localhost:PORT4
# Found slave: localhost:PORT4
# Discovering slave at localhost:PORT5
# Found slave: localhost:PORT5
# Checking privileges.
ERROR: You must specify either the --rpl-user or set all slaves to use --master-info-repository=TABLE.
Test case 26 - mix FILE/TABLE and --rpl-user
# Discovering slaves for master at localhost:PORT1
# Discovering slave at localhost:PORT2
# Found slave: localhost:PORT2
# Discovering slave at localhost:PORT3
# Found slave: localhost:PORT3
# Discovering slave at localhost:PORT4
# Found slave: localhost:PORT4
# Discovering slave at localhost:PORT5
# Found slave: localhost:PORT5
# Checking privileges.
# Performing switchover from master at localhost:PORT1 to slave at localhost:PORT5.
# Checking candidate slave prerequisites.
# Checking slaves configuration to master.
# Waiting for slaves to catch up to old master.
# Stopping slaves.
# Performing STOP on all slaves.
# Switching slaves to new master.
# Starting all slaves.
# Performing START on all slaves.
# Checking slaves for errors.
# Switchover complete.
#
# Replication Topology Health:
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT5  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT2  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
# ...done.
Test case 27 - slave not part of topology
# ERROR: Errant transaction(s) found on slave(s).
#  - For slave 'localhost@PORT?': XXXXX
# WARNING: Server 'localhost@PORT5' is not acting as a slave.
+------------+-------+---------+--------+------------+---------+
| host       | port  | role    | state  | gtid_mode  | health  |
+------------+-------+---------+--------+------------+---------+
| localhost  | PORT2  | MASTER  | UP     | ON         | OK      |
| localhost  | PORT3  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT4  | SLAVE   | UP     | ON         | OK      |
| localhost  | PORT5  | SLAVE   | UP     | ON         | OK      |
+------------+-------+---------+--------+------------+---------+
Test case 28 - HEALTH with some transactions behind
# Checking privileges.
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
#
# Replication Topology Health:
*************************       1. row *************************
            host: localhost
            port: PORT1
            role: MASTER
           state: UP
       gtid_mode: ON
          health: OK
         version: XX.XX.XX
 master_log_file: XXXXX.XXXX
  master_log_pos: XXXX
       IO_Thread: 
      SQL_Thread: 
     Secs_Behind: X
 Remaining_Delay: XXX
    IO_Error_Num: 
        IO_Error: 
   SQL_Error_Num: 
       SQL_Error: 
    Trans_Behind: 
*************************       2. row *************************
            host: localhost
            port: PORT2
            role: SLAVE
           state: UP
       gtid_mode: ON
          health: Slave has 4 transactions behind master.
         version: XX.XX.XX
 master_log_file: XXXXX.XXXX
  master_log_pos: XXXX
       IO_Thread: Yes
      SQL_Thread: Yes
     Secs_Behind: X
 Remaining_Delay: XXX
    IO_Error_Num: 0
        IO_Error: 
   SQL_Error_Num: 0
       SQL_Error: 
    Trans_Behind: 4
2 rows.
# ...done.
