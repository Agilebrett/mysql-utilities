Test case 1 - show help
Usage: mysqlserverclone.py --server=user:pass@host:port:socket --new-data=<dir> --new-port=3307 --new-id=2

mysqlserverclone - start another instance of a running server

Options:
  --version             show program's version number and exit
  --help                
  --server=SERVER       connection information for the server in the form:
                        <user>:<password>@<host>:<port>:<socket>
  --new-data=NEW_DATA   the full path to the location of the data directory
                        for the new instance
  --new-port=NEW_PORT   the new port for the new instance - default=3307
  --new-id=NEW_ID       the server_id for the new instance - default=2
  --root-password=ROOTPASS
                        password for the root user
  --mysqld=MYSQLD       Additional options for mysqld
  -v, --verbose         display additional information during operation
Test case 2 - error: no --new-data option
Usage: mysqlserverclone.py --server=user:pass@host:port:socket --new-data=<dir> --new-port=3307 --new-id=2

mysqlserverclone.py: error: No new database path. Use --help for available options.
Test case 3 - error: no login
ERROR: Cannot connect to the source server.
Error 2005: Unknown MySQL server host 'nothere' #######
Test case 4 - error: cannot connect
ERROR: Cannot connect to the source server.
Error 2005: Unknown MySQL server host 'nothere' #######
Test case 5 - cannot create directory
# Cloning the MySQL server running on localhost.
# Creating new data directory...
ERROR: Unable to create directory '/not/there/yes'
# Cloning the MySQL server running on localhost.
# Creating new data directory...
# Configuring new instance...
# Locating mysql tools...
# Setting up empty database and mysql tables...
# Starting new instance of the server...
# Testing connection to new instance...
# Success!
# Setting the root password...
