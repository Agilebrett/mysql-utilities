Test case 1 - normal run
# Source: root@localhost: ... connected.
# Destination: root@localhost: ... connected.
# Copying database util_test renamed as util_db_clone
# Copying TABLE util_test.t1
# Copying table data.
# Copying TABLE util_test.t2
# Copying table data.
# Copying TABLE util_test.t3
# Copying table data.
# Copying TABLE util_test.t4
# Copying table data.
# Copying VIEW util_test.v1
# Copying TRIGGER util_test.trg
# Copying PROCEDURE util_test.p1
# Copying FUNCTION util_test.f1
# Copying EVENT util_test.e1
# Copying GRANTS from util_test
#...done.
Test case 2 - operation fails - need force
# Source: root@localhost: ... connected.
# Destination: root@localhost: ... connected.
# Copying database util_test renamed as util_db_clone
ERROR: destination database exists. Use --force to overwrite existing database.
Test case 3 - help
Usage: mysqldbcopy.py --source=user:pass@host:port:socket --destination=user:pass@host:port:socket orig_db:new_db

mysqldbcopy - copy databases from one server to another

Options:
  --version             show program's version number and exit
  --help                
  --source=SOURCE       connection information for source server in the form:
                        <user>:<password>@<host>:<port>:<socket>
  --destination=DESTINATION
                        connection information for destination server in the
                        form: <user>:<password>@<host>:<port>:<socket>
  --copy-dir=COPY_DIR   a path to use when copying data (stores temporary
                        files) - default = current directory
  --skip-tables         exclude tables in the copy process
  --skip-views          exclude views in the copy process
  --skip-triggers       exclude triggers in the copy process
  --skip-procedures     exclude procedures in the copy process
  --skip-functions      exclude functions in the copy process
  --skip-events         exclude events in the copy process
  --skip-grants         exclude database-level and below grants in the copy
                        process
  --skip-data           do not copy the data from the source database to the
                        destination database
  --skip-create-db      do not create the destination database
  -f, --force           drop the new database or object if it exists
  -v, --verbose         display additional information during operation
  --silent              do not display feedback information during operation
Test case 4 - no data
# Source: root@localhost: ... connected.
# Destination: root@localhost: ... connected.
# Copying database util_test renamed as util_db_clone
# Copying TABLE util_test.t1
# Copying TABLE util_test.t2
# Copying TABLE util_test.t3
# Copying TABLE util_test.t4
# Copying VIEW util_test.v1
# Copying TRIGGER util_test.trg
# Copying PROCEDURE util_test.p1
# Copying FUNCTION util_test.f1
# Copying EVENT util_test.e1
# Copying GRANTS from util_test
#...done.
OBJECT COUNTS: tables = 4, views = 1, triggers = 1, procedures = 1, functions = 1, events = 1 
Test case 5 - silent clone
